
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package be.ac.fundp.uimanager.provider;

import java.util.List;
import java.util.logging.Logger;

import be.ac.fundp.uimanager.ClientDispacherSelector;
import be.ac.fundp.uimanager.UiManagerUtil;
import be.ac.fundp.uimanager.client.Dispatcher;

// TODO: Auto-generated Javadoc
/**
 * This class was generated by Apache CXF 2.5.0
 * 2011-11-20T15:08:02.492+01:00
 * Generated source version: 2.5.0
 *
 * @author Waldemar Pires Ferreira Neto (waldemar.neto@fundp.ac.be)
 * @date Dec 9, 2011
 */

@javax.jws.WebService(
                      serviceName = "UiManager",
                      portName = "UiManagerSOAP",
                      targetNamespace = "http://fundp.ac.be/UiManager/",
                      wsdlLocation = "http://localhost:8090/UiManager/services/UiManager/?wsdl",
                      endpointInterface = "be.ac.fundp.uimanager.provider.UiManager")
                      
public class UiManagerImpl implements UiManager {

    /** The Constant LOG. */
    private static final Logger LOG = Logger.getLogger(UiManagerImpl.class.getName());
    
    /** The client selector. */
    protected ClientDispacherSelector clientSelector = ClientDispacherSelector.getInstance();

    /* (non-Javadoc)
     * @see be.ac.fundp.uimanager.provider.UiManager#inputOperation(java.lang.String  userInteracId ,)java.lang.String  role ,)java.lang.String  processId )*
     */
    public java.util.List<UiDataType> inputOperation(java.lang.String userInteracId,java.lang.String role,java.lang.String processId) { 
        LOG.info("Executing operation inputOperation");
        System.out.println("inputOperation - begin");
		Dispatcher clientDisp = clientSelector.getDispacher(role); 
		System.out.println("inputOperation - my role = "+role);
		List<UiDataType> response = clientDisp.requireInputInteracion(processId, userInteracId, role);
		System.out.println("input awnser = "+response);
		System.out.println("inputOperation - end");
		return response;
    }

    /* (non-Javadoc)
     * @see be.ac.fundp.uimanager.provider.UiManager#selectionOperation(java.lang.String  userInteracId ,)java.lang.String  role ,)java.lang.String  processId ,)java.util.List<be.ac.fundp.uimanager.provider.UiDataType>  data )*
     */
    public java.util.List<be.ac.fundp.uimanager.provider.UiDataType> selectionOperation(java.lang.String userInteracId,java.lang.String role,java.lang.String processId,java.util.List<be.ac.fundp.uimanager.provider.UiDataType> data) { 
        LOG.info("Executing operation selectionOperation");
        System.out.println("inputOperation - begin");
		Dispatcher clientDisp = clientSelector.getDispacher(role); 
		System.out.println("inputOperation - my role = "+role);
		List<UiDataType> response = clientDisp.requireSelectionInteracion(processId, userInteracId, data, role);
		System.out.println("input awnser = "+response);
		System.out.println("inputOperation - end");
		return response;
    }

    /* (non-Javadoc)
     * @see be.ac.fundp.uimanager.provider.UiManager#outputOperation(java.lang.String  userInteracId ,)java.lang.String  role ,)java.lang.String  processid ,)java.util.List<be.ac.fundp.uimanager.provider.UiDataType>  data )*
     */
    public void outputOperation(java.lang.String userInteracId,java.lang.String role,java.lang.String processid,java.util.List<be.ac.fundp.uimanager.provider.UiDataType> data) { 
    	System.out.println("outputOperation - begin");
		Dispatcher clientDisp = clientSelector.getDispacher(role); 
		System.out.println("outputOperation - my role = "+role);
		clientDisp.requireOutputInteracion(processid, userInteracId, data, role);
		System.out.println("outputOperation - begin");
    }

    /* (non-Javadoc)
     * @see be.ac.fundp.uimanager.provider.UiManager#generateProcessId(*
     */
    public java.lang.String generateProcessId() { 
        LOG.info("Executing operation generateProcessId");
        System.out.println("generateProcessId - begin");
        
		String genResp = UiManagerUtil.generateId();
		System.out.println("the process key = "+genResp);
		System.out.println("generateProcessId - end");
		return genResp;
    }

}
